<!DOCTYPE html>
<html lang="ja">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0,user-scalable=no">
	<title></title>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
	<link rel="stylesheet" href="/stylesheets/common.css">
	<link rel="stylesheet" href="/stylesheets/spot-list.css">
</head>
<body>
	<header id="header">
		
	</header>

	<div class="switching-navi">
		<ul>
			<li class="switching-navi-spot active">スポット一覧</li>
			<li class="switching-navi-map">マップ表示</li>
		</ul>
	</div>

	<div class="search">
		<i class="fa fa-search" aria-hidden="true"></i>
		<input type="text" name="search" placeholder="絞り込み" id="search">
	</div>


	<div class="tab-box-container">
		<div class="tab-box">

			<div class="spot-container active tab-content1">
				<ul>

					<li class="spot" v-for="shop in shopList">
						<div class="spot-top">
							<a href="spot/detail">
								<div class="spot-image" v-bind:style="{ backgroundImage: 'url('+shop.image+')'}"></div>
							</a>
						</div>

						<div class="spot-bottom">
							<div class="spot-genre">
								ジャンル: {{shop.genre}}
							</div>
							<a href="spot/detail">
								<div class="spot-title">
									{{shop.shopName}}
								</div>
							</a>
							<div class="spot-bottom-box">
								<div class="spot-bottom-left">
									<div class="spot-business-hours" v-if="shop.openNow" v-html="shop.openNow"></div>
									<div class="rating" v-html="shop.rating"></div>
								</div>
								
								<button class="add-routes-button" v-bind:data-id="shop.placeId" v-bind:data-sortid="shop.sortId" v-bind:data-lat="shop.lat" v-bind:data-lng="shop.lng">
									ルートに追加
								</button>
							</div>
						</div>
					</li>
					
				</ul>
			</div>

			<div class="map-container tab-content2">
				<div id="map">
					<div class="map-error-message">
						ネットワークに<br>
						接続されていません。
					</div>
				</div>
				<div class="route-navi">
					<!-- <div class="map-spot-title-container">
						<div class="icon map-spot-from">発</div>
						<div class="map-spot-title first">河原町駅</div>
					</div>
					<div class="map-spot-title-container">
						<div class="icon map-spot-via"></div>
						<div class="map-spot-title after">茶寮都路里 祇園本店</div>
					</div>
					<div class="map-spot-title-container">
						<div class="icon map-spot-to">着</div>
						<div class="map-spot-title after last">清水寺</div>
					</div> -->
				</div>
				<div class="confirm-route">
					<button class="confirm-route-button">このルートで決定</button>
				</div>
			</div>

		</div><!-- tab-box -->
	</div>

	<!-- fix-navigation -->
	<div class="fix-navi-button">
		<div class="sideShowBtn">
	        <span class="first"></span>
	        <span class="second"></span>
	        <span class="third"></span>
	    </div>
	</div>

	<ul class="fix-navi">
		<li class="fix-navi-list fix-navi-home">
			<a href="/">
				<div class="fix-navi-icon"><i class="fa fa-home" aria-hidden="true"></i></div>
				<div class="fix-navi-content">ホーム</div>
			</a>
		</li>
		<li class="fix-navi-list fix-navi-mypage">
			<a href="/mypage">
				<div class="fix-navi-icon"><i class="fa fa-user" aria-hidden="true"></i></div>
				<div class="fix-navi-content">マイページ</div>
			</a>
		</li>
		<li class="fix-navi-list fix-navi-fav">
			<a href="#">
				<div class="fix-navi-icon"><i class="fa fa-star" aria-hidden="true"></i></div>
				<div class="fix-navi-content">気になるスポット</div>
			</a>
		</li>
	</ul>
	<!-- /fix-navigation -->

	<div class="loading">
		<div class="loading-content">
			<div class="loading-icon">
				<i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>
			</div>
		</div>
	</div>


  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA5LspVyD9HSyrYhn8IEEn9CaPavQ0-Foc"></script>
	<script src="/js/gmaps.min.js"></script>
	<script src="/js/jquery.min.js"></script>
	<script src="/js/TweenMax.min.js"></script>
	<script src="/js/MapManager.js"></script>
	<script src="/js/ShopListManager.js"></script>
	<script src="/js/vue.min.js"></script>
	<script>
		(function($){

			var vm = initVue()

			function initVue(){
				var vm = new Vue({
					el: ".spot-container",
					data: {
						shopList: []
					}
				})

				return vm
			}

			$('.switching-navi li').on('click', function(){
				if($('.fix-navi-button').hasClass('opened')){
					noScroll(false)
					endAnimation()
		    		$('.fix-navi-button').removeClass('opened')
				}
				if($(this).not('active')){
					$(this).addClass('active').siblings('li').removeClass('active')
					var index = $('.switching-navi li').index(this)
					switch(index){
						case 0:
							$('.tab-content1').addClass('active')
							$('.tab-content2').removeClass('active')
							break;
						case 1:
							$('.tab-content1').removeClass('active')
							$('.tab-content2').addClass('active')

							$('.map-spot-title-container').remove();

							var latLngArr = mapManager.makeLatLngArr()
							var center = mapManager.calcCenterPositionArray(latLngArr.latArr,latLngArr.lngArr)
							mapManager.initMapArray(center.lat,center.lng,14)
							mapManager.renderRoute()
							break;
					}
				}
			});

			$('.fix-navi-button').on('touchend',onClickNaviButton)

			$('.spot-container').on('click', '.add-routes-button', function(){
				// console.log($(this).data('id'))
				// console.log($(this).data('sortid'))
				// var data =  document.querySelector('.add-routes-button')
				// console.log(data.dataset)
				// var id = data.dataset.sortid
				// var placeId = data.dataset.id
				// var lat = data.dataset.lat
				// var lng = data.dataset.lng
				var id = $(this).data('sortid')
				var placeId = $(this).data('id')
				var lat = $(this).data('lat')
				var lng = $(this).data('lng')
				console.log(id,placeId,lat,lng)
				if ($(this).hasClass('isAdded')) {
					mapManager.removeRoute(id)
					$(this).css('background-color', '#FFF')
					$(this).css('color', '#16A6B6')
					$(this).text('ルートに追加')
					$(this).removeClass('isAdded')
				} else {
					mapManager.setRoute(id,placeId,lat,lng)
					// mapManager.setRoute(1,'abcd','河原町駅',35.003751,135.7687486)
					// mapManager.setRoute(2,'abcd','茶寮都路里 祇園本店',35.0036537,135.7744845)
					// mapManager.setRoute(3,'abcd','八坂神社',35.0036559,135.7785534)
					$(this).css('background-color', '#16A6B6')
					$(this).css('color', '#FFF')
					$(this).text('追加済み')
					$(this).addClass('isAdded')
				}

				// mapManager.setRoute(1,'abcd','河原町駅',35.0004487,135.7617562)
				// mapManager.setRoute(4,'abcd','清水寺',34.9948622,135.7847918)
				// mapManager.setRoute(2,'abcd','茶寮都路里 祇園本店',35.0017614,135.7751592)
				// mapManager.setRoute(3,'abcd','八坂神社',35.0025211,135.7750301)
			})

			$('.confirm-route-button').on('click', function(){
				$('.loading').show()
				$('.loading').css('backgroundColor','rgba(0,0,0,0.3)')
				$('.loading-content').css('color','#fff')
				$('.loading-icon i').css('color','#fff')
				$('.loading-icon').after('<div class="loading-message">ルートのデータを<br>作成しています</div>')
				var routeId = makeUuid()
				var userId = '1'
				var routes = mapManager.routes
				console.log(routeId)
				console.log(routes)
				// $.ajax({
				// 	url: "/api/save",
				// 	type: "GET",
				// 	data: {
				// 		routeId: routeId,
				// 		userId: userId,
				// 		routes: routes
				// 	}
				// })
				// .done(function(data){
				// 	$('.loading').hide()
				// 	console.log(data)
				// })
				// .fail(function(err){
				// 	$('.loading').hide()
				// 	console.log(err)
				// })

				setTimeout(function(){
					window.location.href = '/confirm?'+routeId
				},3000)
			})

			function makeUuid() {
                var uuid = ""
                uuid = (Date.now()+Math.floor(Math.random()*999999)).toString(36)
                return uuid
            }

			/**
		     * fix-naviのアニメーションのキック
		     *
		     * @param { bool } bool
		     */
			function onClickNaviButton() {
				if($(this).hasClass('opened')){
					noScroll(false)
					endAnimation()
					$(this).removeClass('opened')
				}else{
					noScroll(true)
					startAnimation()
					$(this).addClass('opened')
				}

			}

			/**
		     * フラグがtrueならスクロールを止める
		     *
		     * @param { bool } bool
		     */
			function noScroll(bool){
				if (bool) {
					$('.tab-box-container').on('touchmove.noScroll', function(e) {
			            e.preventDefault();
			        });
				} else {
					$('.tab-box-container').off('.noScroll');
				}
			}

			/**
		     * 斜めにするアニメーション
		     * ボタンのアニメーション
		     */
			function startAnimation(){
				TweenMax.to('.spot-container',0,{marginBottom: '20vh',ease: Circ.easeInOut})
				TweenMax.to('.map-container',0,{marginBottom: '20vh',ease: Circ.easeInOut})
				TweenMax.to('.tab-box-container',0.7,{height: '120vh',transform: 'rotateZ(30deg)',ease: Circ.easeInOut})
				setTimeout(function(){
					$(".sideShowBtn .first").css("transform","rotate(45deg)");
					$(".sideShowBtn .first").animate({
						top: "12px"
					},0)
					$(".sideShowBtn .second").css("opacity","0");
					$(".sideShowBtn .third").css("transform","rotate(-45deg)");
					$(".sideShowBtn .third").animate({
						top: "12px"
					},0)
	    		},100)
			}

			/**
		     * 斜めにするアニメーションを元に戻す
		     * ボタンのアニメーションを元に戻す
		     */
			function endAnimation(){
				TweenMax.to('.spot-container',0.7,{marginBottom: '0%',ease: Circ.easeInOut})
				TweenMax.to('.map-container',0.7,{marginBottom: '0%',ease: Circ.easeInOut})
				TweenMax.to('.tab-box-container',0.7,{height: '100%',transform: 'rotateZ(0deg)',ease: Circ.easeInOut})
				setTimeout(function(){
					$(".sideShowBtn .first").css("transform","rotate(0deg)");
					$(".sideShowBtn .first").animate({
						top: "5px"
					},0)
					$(".sideShowBtn .second").css("opacity","1");
					$(".sideShowBtn .third").css("transform","rotate(0deg)");
					$(".sideShowBtn .third").animate({
						top: "19px"
					},0)
	    		},100)
			}

			var params = new Object;
			var pair=location.search.substring(1).split('&');
			for(var i=0;pair[i];i++) {
			    var kv = pair[i].split('=');
			    params[kv[0]]=kv[1];
			}

			var place = shopListManager.getPlace()

			if(place != null && place.origin == decodeURIComponent(params.origin) && place.destination == decodeURIComponent(params.destination) && shopListManager.isCache){
				var shopList = shopListManager.getList()
				renderView(shopList)
			}else{
				shopListManager.setPlace({
					origin: decodeURIComponent(params.origin),
					destination: decodeURIComponent(params.destination)
				})
				console.log("ajax...")

				$('.loading').show();

				$.ajax({
					url: "/api",
					type: "GET",
					data: {
						origin: decodeURIComponent(params.origin),
						destination: decodeURIComponent(params.destination)
					}
				})
				.done(function(data){
					$('.loading').hide();
					
					if(data.shopList.length > 0){
						shopListManager.setList(data.shopList)
						shopListManager.isCache = true
						renderView(data.shopList)
					}
					$('.spot-container').prepend('<div class="spot-container-count"></div>')
					$('.spot-container-count').text('検索結果:'+data.shopList.length+'件')
					var place = data.place
					var origin = place.origin
					var destination = place.destination
					mapManager.setRoute('0',null,origin.placeName,origin.lat,origin.lng)
					mapManager.setRoute('100',null,destination.placeName,destination.lat,destination.lng)
					
				})
			}

			function renderView(shopListForVue){
				console.log(shopListForVue)
				for (i in shopListForVue) {
					var openMsg = openNow(shopListForVue[i].openNow)
					shopListForVue[i].openNow = openMsg
					var rating = makeRating(shopListForVue[i].rating)
					shopListForVue[i].rating = rating
				}
				Vue.nextTick(function(){
					vm.shopList = shopListForVue
				});
			}

			function openNow(bool){
				if (bool) {
					return '現在営業中'
				}
				return '営業時間外'
			}

			function makeRating(rating){
				var yelloStar = ~~rating
				var blackStar = 5- ~~(rating)

				var rating = []
				for(var i = 0; i < yelloStar; i++){
					rating.push('<i class="fa fa-star" aria-hidden="true"></i>')
				}
				for(var i = 0; i < blackStar; i++){
					rating.push('<i class="fa fa-star-o" aria-hidden="true"></i>')
				}
				return rating.join("")
			}

			function addRouteNaviFrom(spotName){
				$('.route-navi').append('<div class="map-spot-title-container"><div class="icon map-spot-from">発</div><div class="map-spot-title first">'+spotName+'</div></div>')
			}

			function addRouteNaviVia(spotName){
				$('.route-navi').append('<div class="map-spot-title-container"><div class="icon map-spot-via"></div><div class="map-spot-title after">'+spotName+'</div></div>')
			}

			function addRouteNaviTo(spotName){
				$('.route-navi').append('<div class="map-spot-title-container"><div class="icon map-spot-to">着</div><div class="map-spot-title after last">'+spotName+'</div></div>')
			}

		})(jQuery)
	</script>
</body>
</html>